version: "3.9"

x-bot: &bot
  TOKEN: ${TOKEN}
  ADMINS: ${ADMINS}
  DATABASE: ${DATABASE}
  DBUSER: ${DBUSER}
  DBPASSWORD: ${DBPASSWORD}
  DBHOST: ${DBHOST}
  DBPORT: ${DBPORT}
  REDIS_HOST: ${REDIS_HOST}
  REDIS_PORT: ${REDIS_PORT}

x-postgres: &postgres
  POSTGRES_DB: ${DATABASE}
  POSTGRES_USER: ${DBUSER}
  POSTGRES_PASSWORD: ${DBPASSWORD}

services:
  bot:
    container_name: bot_container
    build: .
    working_dir: ${PROJECT_PATH}
    volumes:
      - ./:${PROJECT_PATH}
    entrypoint: /usr/bin/docker-entrypoint.sh
    restart: "always"
    environment: *bot
    depends_on:
      postgres:
        condition: service_healthy

  celeryworker:
    container_name: celeryworker_container
    build: .
    volumes:
      - ./:${PROJECT_PATH}
    restart: "always"
    command: "celery -A worker worker --pool=prefork -f ${PROJECT_PATH}/celery.log -l info"
    environment: *bot
    depends_on:
      - redis

  celeryscheduler:
    container_name: celeryscheduler_container
    build: .
    volumes:
      - ./:${PROJECT_PATH}
    restart: "always"
    command: "celery -A worker beat -f ${PROJECT_PATH}/celeryscheduler.log -l info"
    environment: *bot
    depends_on:
      - celeryworker

  redis:
    container_name: redis_container
    image: redis:7-alpine
    ports:
      - ${REDIS_PORT}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres_container
    build: ./postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: "always"
    ports:
      - ${DBPORT}
    environment: *postgres
    healthcheck:
      test: "pg_isready -U ${DBUSER} -d ${DATABASE}"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  postgres_data:
